generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  id          Int          @id @default(autoincrement())
  createdBy   Int
  groupId     Int
  title       String       @db.VarChar(255)
  description String       @db.VarChar(255)
  startDate   DateTime     @default(now()) @db.Timestamptz(6)
  endDate     DateTime?    @db.Timestamptz(6)
  Attendance  Attendance[]
  Member      Member       @relation(fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Group       Group        @relation(fields: [groupId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "events_groupId_fkey")
}

model Group {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(255)
  createdBy   Int
  description String    @db.VarChar(255)
  createdAt   DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt   DateTime? @db.Timestamptz(6)
  Event       Event[]
  User        User      @relation(fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Member      Member[]
}

model Member {
  id         Int          @id @default(autoincrement())
  userId     Int
  groupId    Int
  roleId     Int
  joinedAt   DateTime     @default(now()) @db.Timestamptz(6)
  deletedAt  DateTime?    @db.Timestamptz(6)
  Attendance Attendance[]
  Event      Event[]
  Group      Group        @relation(fields: [groupId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "members_groupId_fkey")
  MemberRole MemberRole   @relation(fields: [roleId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  User       User         @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "members_userId_fkey")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique @db.VarChar(50)
  email     String    @unique @db.VarChar(255)
  password  String    @db.VarChar(255)
  imageUrl  String?   @db.VarChar(255)
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt DateTime? @db.Timestamptz(6)
  Group     Group[]
  Member    Member[]
}

model Attendance {
  memberId     Int
  eventId      Int
  attendedDate DateTime @default(now()) @db.Timestamptz(6)
  Event        Event    @relation(fields: [eventId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Member       Member   @relation(fields: [memberId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([memberId, eventId])
}

model MemberRole {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(50)
  description String   @db.VarChar(255)
  Member      Member[]
}
